plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.16'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'groovy'
	id 'jacoco'
}

group = 'com.tech.trove'
version = '0.0.1-SNAPSHOT'

apply plugin: "jacoco"


java {
	sourceCompatibility = '1.8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

tasks.withType(Copy).all {
	duplicatesStrategy 'exclude'
}


repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.8")
}

tasks.withType(JavaCompile) {
	configure(options) {
		options.compilerArgs << '-Xlint:-processing' << '-Xlint:-serial' << '-Xlint:all'
		options.deprecation = true
	}
}


dependencies {
	implementation platform('software.amazon.awssdk:bom:2.20.160')
	implementation 'software.amazon.awssdk:auth'
	implementation 'software.amazon.awssdk:sts'
	implementation 'software.amazon.awssdk:cognitoidentityprovider'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

	implementation 'org.springframework.boot:spring-boot-starter-cache:2.7.16'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'redis.clients:jedis:4.4.5'


	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	implementation "org.springdoc:springdoc-openapi-ui:1.7.0"

	// For Filter
	implementation 'com.auth0:java-jwt:3.12.1'
	implementation 'com.auth0:java-jwt:3.19.1'
	implementation 'commons-codec:commons-codec:1.15'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.2.2'

	implementation 'org.mapstruct:mapstruct:1.5.0.Beta2'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.0.Beta2'
	implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	//testing
	testImplementation 'cglib:cglib-nodep:3.2.9'
	implementation "org.codehaus.groovy:groovy:3.0.10"
	testImplementation platform("org.spockframework:spock-bom:2.1-groovy-3.0")
	testImplementation "org.codehaus.groovy:groovy-all:3.0.10"
	testImplementation("org.spockframework:spock-core")
	testImplementation("org.spockframework:spock-spring")
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


jacoco {
	toolVersion = '0.8.10'
}

jacocoTestReport {
	reports {
		xml.destination file("$buildDir/build/jacoco/xml")
		html.destination file("$buildDir/build/jacoco/html")
	}
	dependsOn test
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: [
							'com/tech/trove/TechTroveApplication.class',
							'com/tech/trove/infrastructure/**',
							'com/tech/trove/ordermanagement/application/dto/**',
							'com/tech/trove/ordermanagement/application/mapper/**',
							'com/tech/trove/ordermanagement/domain/model/**',
							'com/tech/trove/ordermanagement/infrastructure/database/**',
							'com/tech/trove/productmanagement/application/dto/**',
							'com/tech/trove/productmanagement/application/mapper/**',
							'com/tech/trove/productmanagement/domain/model/**',
							'com/tech/trove/productmanagement/infrastructure/database/**',
							'com/tech/trove/usermanagement/application/dto/**',
							'com/tech/trove/usermanagement/application/mapper/**',
							'com/tech/trove/usermanagement/common/constant/**',
							'com/tech/trove/usermanagement/domain/model/**',
							'com/tech/trove/usermanagement/infrastructure/database/**'
					])
		}))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.8
			}
		}
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: [
							'com/tech/trove/TechTroveApplication.class',
							'com/tech/trove/infrastructure/**',
							'com/tech/trove/ordermanagement/application/dto/**',
							'com/tech/trove/ordermanagement/application/mapper/**',
							'com/tech/trove/ordermanagement/domain/model/**',
							'com/tech/trove/ordermanagement/infrastructure/database/**',
							'com/tech/trove/productmanagement/application/dto/**',
							'com/tech/trove/productmanagement/application/mapper/**',
							'com/tech/trove/productmanagement/domain/model/**',
							'com/tech/trove/productmanagement/infrastructure/database/**',
							'com/tech/trove/usermanagement/application/dto/**',
							'com/tech/trove/usermanagement/application/mapper/**',
							'com/tech/trove/usermanagement/common/constant/**',
							'com/tech/trove/usermanagement/domain/model/**',
							'com/tech/trove/usermanagement/infrastructure/database/**'
					])
		}))
	}
}
check.dependsOn jacocoTestCoverageVerification



test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}